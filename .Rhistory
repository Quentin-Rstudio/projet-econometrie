mutate(code2 = as.character(code2))
base_exploration <- base_complete %>%
select(-code2)
graph3 <- ggplot(base_exploration, aes (x = conn_env, y = perc_env)) +
geom_point(color = "darkgreen", size = 3, alpha = 0.3) +
geom_smooth (method = "lm", size = 1, lty = 1, se = 2  )
graph1 <- ggplot(data = base_exploration,
mapping = aes(y=Nom_pays,
x = depenses_brutes_env,
fill = depenses_brutes_env)) +
geom_col()
graph1 <- graph1 + labs(title = "Les dépenses nationales pour la protection de l'environnement",
y = "Pays",
x = "NEEP brutes",
fill = NULL,
subtitle= "des pays Européen en million d'euros")
print(graph1)
graph2 <- ggplot(data = base_exploration,
mapping = aes(y=Nom_pays,
x = part_depenses_env,
fill = part_depenses_env)) +
geom_col()
graph2 <- graph2 + labs(title = "Les dépenses nationales pour la protection de l'environnement ",
y = "Pays",
x = "Part des dépenses environnementales dans le PIB",
fill = NULL,
subtitle= "des pays Européens en points de PIB")
print(graph2)
graph4 <- ggplot(base_exploration, aes (x = conn_env, y = soutien_pol_env)) +
geom_point(color = "darkgreen", size = 3, alpha = 0.3) +
geom_smooth (method = "lm", size = 1, lty = 1, se = 2  )
graph4 <- graph4 + labs(title = "Lien entre la connaissance des problèmes environnementaux et le soutien aux politiques environnementales",
y = "Soutien aux mesures de protection de l'environnement",
x = "Connaissance environnementale",
fill = NULL,
subtitle = "D'après l'Europen Values Survey")
print(graph4)
graph5 <- ggplot(base_exploration, aes (x = perc_env, y = soutien_pol_env)) +
geom_point(color = "darkgreen", size = 3, alpha = 0.3) +
geom_smooth (method = "lm", size = 1, lty = 1, se = 2  )
graph5 <- graph5 + labs(title = "Lien entre le soutien aux politiques environnementales et la perception des problèmes environnementaux",
y = "Soutien aux mesures de protection de l'environnement",
x = "Perception environnementale",
fill = NULL,
subtitle = "D'après l'Europen Values Survey")
print(graph5)
base_exploration <- base_complete %>%
select(-code2)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
## Packages ----
library(dplyr)
library(tidyverse)
library(ggforce)
library(sf)
library(haven)
library(FactoMineR)
library(ggrepel)
library(readxl)
library(stargazer)
library(questionr)
#install.packages("remotes")
#remotes::install_github("easystats/easystats")
library("easystats")
#install.packages("ggraph")
library(ggraph)
library(dplyr)
library(see)
## Données -----
#setwd("C:/Users/quent/Desktop/ENS Paris-Saclay/1A/1S2/Econométrie/TDs/Bases de données/Documents")
setwd("~/Documents/ENS/econometrie/projet_r")
base_complete <- read.csv("base_complete.csv") %>%
select(-X) %>%
mutate(code2 = as.character(code2))
base_exploration <- base_complete %>%
select(-code2)
stargazer(base_exploration, type = 'html', title = "Principaux indicateurs des variables" )
graph1 <- ggplot(data = base_exploration,
mapping = aes(y=Nom_pays,
x = part_depenses_env,
fill = part_depenses_env)) +
geom_col()
graph1 <- graph1 + labs(title = "Les dépenses nationales pour la protection de l'environnement des pays Européens",
y = "Pays",
x = "Part des NEEP dans le PIB",
fill = NULL,
subtitle= "en points de PIB")
print(graph1)
graph2 <- ggplot(data = base_exploration,
mapping = aes(y=Nom_pays,
x = depenses_brutes_env,
fill = depenses_brutes_env)) +
geom_col()
graph2 <- graph2 + labs(title = "Les dépenses nationales pour la protection de l'environnement des pays Européens",
y = "Pays",
x = "NEEP brutes",
fill = NULL,
subtitle= "en million d'euros")
print(graph2)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
## Packages ----
library(dplyr)
library(tidyverse)
library(ggforce)
library(sf)
library(haven)
library(FactoMineR)
library(ggrepel)
library(readxl)
library(stargazer)
library(questionr)
#install.packages("remotes")
#remotes::install_github("easystats/easystats")
library("easystats")
#install.packages("ggraph")
library(ggraph)
library(dplyr)
library(see)
## Données -----
#setwd("C:/Users/quent/Desktop/ENS Paris-Saclay/1A/1S2/Econométrie/TDs/Bases de données/Documents")
setwd("~/Documents/ENS/econometrie/projet_r")
base_complete <- read.csv("base_complete.csv") %>%
select(-X) %>%
mutate(code2 = as.character(code2))
base_exploration <- base_complete %>%
select(-code2)
stargazer(base_exploration, type = 'html', title = "Principaux indicateurs des variables" )
graph1 <- ggplot(data = base_exploration,
mapping = aes(y=Nom_pays,
x = part_depenses_env,
fill = part_depenses_env)) +
geom_col()
graph1 <- graph1 + labs(title = "Les dépenses nationales pour la protection de l'environnement des pays Européens",
y = "Pays",
x = "Part des NEEP dans le PIB",
fill = NULL,
subtitle= "en points de PIB")
print(graph1)
graph2 <- ggplot(data = base_exploration,
mapping = aes(y=Nom_pays,
x = depenses_brutes_env,
fill = depenses_brutes_env)) +
geom_col()
graph2 <- graph2 + labs(title = "Les dépenses nationales pour la protection de l'environnement des pays Européens",
y = "Pays",
x = "NEEP brutes",
fill = NULL,
subtitle= "en million d'euros")
print(graph2)
resultats_cor <- correlation(base_exploration)
resultats_cor <- summary(resultats_cor, redundant = TRUE)
print(resultats_cor)
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
resultats_cor <- summary(resultats_cor, redundant = TRUE)
print(resultats_cor)
resultats_cor <- correlation(base_exploration)
resultats_cor <- summary(resultats_cor, redundant = TRUE)
print(resultats_cor)
graph_cor <- resultats_cor %>%
summary(redundant = TRUE) %>%
plot()
graph_cor2 <- base_exploration %>%
correlation(partial = TRUE) %>%
plot(main = "Modèle graphique gaussien des corrélations partiales entre les variables")
graph_cor2
graph_cor2
graph_cor3 <- resultats_cor %>%
summary(redundant = TRUE) %>%
plot(show_values = TRUE, show_p = TRUE, show_legend = TRUE)
resultats_cor <- correlation(base_complete)
resultats_cor <- summary(resultats_cor, redundant = TRUE)
print(resultats_cor)
graph_cor3 <- resultats_cor %>%
summary(redundant = TRUE) %>%
plot(show_values = TRUE, show_p = TRUE, show_legend = TRUE)
report(base_exploration)
print(report(base_complete))
graph_cor3 <- resultats_cor %>%
+   summary(redundant = TRUE) %>%
+   plot(show_values = TRUE, show_p = TRUE, show_legend = TRUE)
base_complete <- read.csv("base_complete.csv") %>%
select(-X) %>%
base_exploration <- base_complete %>%
select(-code2)
base_complete <- read.csv("base_complete.csv") %>%
select(-X) %>%
base_complete <- read.csv("base_complete.csv") %>%
select(-X) %>%
base_exploration <- base_complete %>%
select(-code2)
library(dplyr)
library(tidyverse)
library(ggforce)
library(sf)
library(haven)
library(FactoMineR)
library(ggrepel)
library(readxl)
library(stargazer)
library(questionr)
#install.packages("remotes")
#remotes::install_github("easystats/easystats")
library("easystats")
#install.packages("ggraph")
library(ggraph)
library(dplyr)
library(see)
base_exploration <- base_complete %>%
select(-code2)
base_complete <- read.csv("base_complete.csv") %>%
select(-X) %>%
base_exploration <- base_complete %>%
select(-code2)
base_complete <- read.csv("base_complete.csv") %>%
select(-X) %>%
base_exploration <- base_complete %>%
select(-code2)
base_exploration <- base_complete %>%
select(-code2)
base_complete <- read.csv("base_complete.csv") %>%
select(-X) %>%
base_exploration <- base_complete %>%
select(-code2)
library(dplyr)
library(tidyverse)
library(ggforce)
library(sf)
library(haven)
library(FactoMineR)
library(ggrepel)
library(readxl)
library(stargazer)
library(questionr)
#install.packages("remotes")
#remotes::install_github("easystats/easystats")
library("easystats")
#install.packages("ggraph")
library(ggraph)
library(dplyr)
library(see)
base_complete <- read.csv("base_complete.csv") %>%
select(-X) %>%
base_exploration <- base_complete %>%
select(-code2)
#setwd("C:/Users/quent/Desktop/ENS Paris-Saclay/1A/1S2/Econométrie/TDs/Bases de données/Documents")
setwd("~/Documents/ENS/econometrie/projet_r")
base_complete <- read.csv("base_complete.csv") %>%
select(-X) %>%
base_exploration <- base_complete %>%
select(-code2)
base_complete <- read.csv("base_complete.csv") %>%
select(-X) %>%
base_exploration <- base_complete %>%
select(-code2)
base_complete <- read.csv("base_complete.csv") %>%
select(-X)
base_complete <- read.csv("base_complete.csv") %>%
select(-X)
base_exploration <- base_complete %>%
select(-code2)
graph1 <- ggplot(data = base_exploration,
mapping = aes(y=Nom_pays,
x = part_depenses_env,
fill = part_depenses_env)) +
geom_col()
graph1 <- graph1 + labs(title = "Les dépenses nationales pour la protection de l'environnement des pays Européens",
y = "Pays",
x = "Part des NEEP dans le PIB",
fill = NULL,
subtitle= "en points de PIB")
print(graph1)
graph2 <- ggplot(data = base_exploration,
mapping = aes(y=Nom_pays,
x = depenses_brutes_env,
fill = depenses_brutes_env)) +
geom_col()
graph2 <- graph2 + labs(title = "Les dépenses nationales pour la protection de l'environnement des pays Européens",
y = "Pays",
x = "NEEP brutes",
fill = NULL,
subtitle= "en million d'euros")
print(graph2)
resultats_cor <- correlation(base_exploration)
print(resultats_cor)
graph_cor <- resultats_cor %>% # à potentiellement remplacer par graph_cor3
summary(redundant = TRUE) %>%
plot()
graph_cor2 <- base_exploration %>%
correlation(partial = TRUE) %>%
plot(main = "Modèle graphique gaussien des corrélations partiales entre les variables")
graph_cor2 <- base_exploration %>%
correlation(partial = TRUE) %>%
plot(main = "Modèle graphique gaussien des corrélations partiales entre les variables")
graph_cor3 <- resultats_cor %>%
summary(redundant = TRUE) %>%
plot(show_values = TRUE, show_p = TRUE, show_legend = TRUE)
report(base_complete)
print(report(base_complete))
resultat_ACP  <- PCA(base_complete[, 5:13])
resultat_ACP  <- PCA(base_complete[, 5:13])
dbact  <-as_tibble(resultat_ACP$var$coord) %>%
mutate(names=c(rownames(resultat_ACP$var$coord)))
dbind <- bind_cols(base_complete,as_tibble(resultat_ACP$ind$coord))
resultat_classif <- HCPC(resultat_ACP, nb.clust = 4, graph = FALSE)
dbind            <- dbind %>%
ungroup() %>%
mutate(groupe = resultat_classif$data.clust$clust)
barplot(resultat_ACP$eig[,2],main="Figure I - Part expliquée par chaque axe dans la variance totale",
names.arg=1:nrow(resultat_ACP$eig),col= rainbow (15))
graph_cor
graph_cor2
graph_cor3
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
## Packages ----
library(tidyverse)
library(ggforce)
library(sf)
library(haven)
library(FactoMineR)
library(ggrepel)
library(stargazer)
library(questionr)
#install.packages("remotes")
#remotes::install_github("easystats/easystats")
#install.packages("qqplotr")
library(qqplotr)
library("easystats")
#install.packages("ggraph")
library(ggraph)
library(dplyr)
library(see)
## Données -----
#setwd("C:/Users/quent/Desktop/ENS Paris-Saclay/1A/1S2/Econométrie/TDs/Bases de données/Documents")
setwd("~/Documents/ENS/econometrie/projet_r")
base_complete <- read.csv("base_complete.csv")
base_exploration <- base_complete %>%
select(-code2)
base_complete <- read.csv("base_complete.csv") %>%
select(-X) %>%
mutate(code2 = as.character(code2))
graph_cor <- resultats_cor %>%
summary(redundant = TRUE) %>%
plot(show_values = TRUE, show_p = TRUE, show_legend = TRUE)
graph_cor <- resultats_cor %>%
summary(redundant = TRUE) %>%
plot(show_values = TRUE, show_p = TRUE, show_legend = TRUE)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
## Packages ----
library(tidyverse)
library(ggforce)
library(sf)
library(haven)
library(FactoMineR)
library(ggrepel)
library(stargazer)
library(questionr)
#install.packages("remotes")
#remotes::install_github("easystats/easystats")
#install.packages("qqplotr")
library(qqplotr)
library("easystats")
#install.packages("ggraph")
library(ggraph)
library(dplyr)
library(see)
## Données -----
#setwd("C:/Users/quent/Desktop/ENS Paris-Saclay/1A/1S2/Econométrie/TDs/Bases de données/Documents")
setwd("~/Documents/ENS/econometrie/projet_r")
base_complete <- read.csv("base_complete.csv")
base_exploration <- base_complete %>%
select(-code2)
base_complete <- read.csv("base_complete.csv") %>%
select(-X) %>%
mutate(code2 = as.character(code2))
#
resultats_cor <- correlation(base_exploration)
resultats_cor <- summary(resultats_cor, redundant = TRUE)
print(resultats_cor)
graph_acp1 <- barplot(resultat_ACP$eig[,2],main="Figure I - Part expliquée par chaque axe dans la variance totale",
names.arg=1:nrow(resultat_ACP$eig),col= rainbow (15))
print(graph_acp1)
graph_acp1 <- barplot(resultat_ACP$eig[,2],main="Figure I - Part expliquée par chaque axe dans la variance totale",
names.arg=1:nrow(resultat_ACP$eig),col= rainbow (15))
print(graph_acp1)
graph_acp1
resultat_ACP  <- PCA(base_complete[, 5:13])
dbind <- bind_cols(base_complete,as_tibble(resultat_ACP$ind$coord))
resultat_classif <- HCPC(resultat_ACP, nb.clust = 4, graph = FALSE)
dbind            <- dbind %>%
ungroup() %>%
mutate(groupe = resultat_classif$data.clust$clust)
graph_acp1 <- barplot(resultat_ACP$eig[,2],main="Figure I - Part expliquée par chaque axe dans la variance totale",
names.arg=1:nrow(resultat_ACP$eig),col= rainbow (15))
print(graph_acp1)
ggplot(dbact,aes(x=Dim.1,y= Dim.2,label=names))+
geom_point()+
theme(legend.title=element_blank(),
panel.background =element_rect(fill="white")) +
geom_text(size=4,show.legend = FALSE)+
geom_hline(yintercept=0,linetype="dashed",colour="grey")+
geom_vline(xintercept = 0,linetype="dashed",colour="grey")+
gtitle("Espace des variables de l'ACP avec les axes 1 et 3") +
xlab(paste("Axe 1 :",round(resultat_ACP$eig[1,2],0),"%"))+
ylab(paste("Axe 2 :",round(resultat_ACP$eig[2,2],0),"%")) +
geom_circle( aes(x0 = 0, y0 = 0, r = 1), inherit.aes = F) +
scale_x_continuous(limits = c(-1, 1)) +
scale_y_continuous(limits = c(-1, 1)) +
coord_fixed() +
geom_segment(aes(x = 0, y = 0, xend = Dim.1, yend = Dim.2), arrow = arrow())
ggplot(dbact,aes(x=Dim.1,y= Dim.2,label=names))+
geom_point()+
theme(legend.title=element_blank(),
panel.background =element_rect(fill="white")) +
geom_text(size=4,show.legend = FALSE)+
geom_hline(yintercept=0,linetype="dashed",colour="grey")+
geom_vline(xintercept = 0,linetype="dashed",colour="grey")+
ggtitle("Espace des variables de l'ACP avec les axes 1 et 3") +
xlab(paste("Axe 1 :",round(resultat_ACP$eig[1,2],0),"%"))+
ylab(paste("Axe 2 :",round(resultat_ACP$eig[2,2],0),"%")) +
geom_circle( aes(x0 = 0, y0 = 0, r = 1), inherit.aes = F) +
scale_x_continuous(limits = c(-1, 1)) +
scale_y_continuous(limits = c(-1, 1)) +
coord_fixed() +
geom_segment(aes(x = 0, y = 0, xend = Dim.1, yend = Dim.2), arrow = arrow())
graph_acp2 <- ggplot(dbact,aes(x=Dim.1,y= Dim.2,label=names))+
geom_point()+
theme(legend.title=element_blank(),
panel.background =element_rect(fill="white")) +
geom_text(size=4,show.legend = FALSE)+
geom_hline(yintercept=0,linetype="dashed",colour="grey")+
geom_vline(xintercept = 0,linetype="dashed",colour="grey")+
ggtitle("Espace des variables de l'ACP avec les axes 1 et 3") +
xlab(paste("Axe 1 :",round(resultat_ACP$eig[1,2],0),"%"))+
ylab(paste("Axe 2 :",round(resultat_ACP$eig[2,2],0),"%")) +
geom_circle( aes(x0 = 0, y0 = 0, r = 1), inherit.aes = F) +
scale_x_continuous(limits = c(-1, 1)) +
scale_y_continuous(limits = c(-1, 1)) +
coord_fixed() +
geom_segment(aes(x = 0, y = 0, xend = Dim.1, yend = Dim.2), arrow = arrow())
graph_acp2
graph_acp1 <- barplot(resultat_ACP$eig[,2],main="Figure I - Part expliquée par chaque axe dans la variance totale",
names.arg=1:nrow(resultat_ACP$eig),col= rainbow (15))
barplot(resultat_ACP$eig[,2],main="Figure I - Part expliquée par chaque axe dans la variance totale",
names.arg=1:nrow(resultat_ACP$eig),col= rainbow (15))
barplot(resultat_ACP$eig[,2],main="Figure I - Part expliquée par chaque axe dans la variance totale",
names.arg=1:nrow(resultat_ACP$eig),col= rainbow (15))
graph_acp1 <- barplot(resultat_ACP$eig[,2],main="Figure I - Part expliquée par chaque axe dans la variance totale",
names.arg=1:nrow(resultat_ACP$eig),col= rainbow (15))
barplot(resultat_ACP$eig[,2],main="Figure I - Part expliquée par chaque axe dans la variance totale",
names.arg=1:nrow(resultat_ACP$eig),col= rainbow (15))
graph_acp1 <- barplot(resultat_ACP$eig[,2],main="Figure I - Part expliquée par chaque axe dans la variance totale",
names.arg=1:nrow(resultat_ACP$eig),col= rainbow (15))
print(graph_acp2)
ggplot(data=dbind,aes(x=Dim.1,y=Dim.2))+
ggtitle("Titre")+
geom_point()+
geom_text_repel(aes(label = c_abrv),size=3)+
geom_hline(yintercept=0,linetype="dashed")+
geom_vline(xintercept = 0,linetype="dashed")+
theme(plot.title=element_text(hjust=0.5),legend.position=c(.95,.2),
panel.background =element_rect(fill="white"),legend.title=element_blank())+
xlab(paste("Axe 1 :",round(resultat_ACP$eig[1,2],0),"%"))+
ylab(paste("Axe 2 :",round(resultat_ACP$eig[2,2],0),"%"))
