?stargazer
??stargazer
unlink('Conscience écologique et dépenses publiques en faveur de l\'environnement - Berleur & Merrien_cache', recursive = TRUE)
install.packages("esquisse")
?esquisse
library(esquisse)
library(stargazer)
?esquisse
??esquisse
esquisser
esquisse-module
esquisse_server
esquisse::esquisser()
esquisse::esquisser()
esquisse::esquisser()
library(tidyverse)
library(tidyverse)
library(sf)
library(janitor)
library(readxl)
library(dplyr)
library(stringr)
library(RColorBrewer)
library(tinytex)
library(ggrepel)
library(knitr)
library(ggrepel)
library(knitr)
library(ggthemes)
library(extrafont)
agri_bio <- read_excel("agri_bio.xlsx")
agri_bio <- clean_names(agri_bio)
agri_bio$agribio_part_2018 <- as.numeric(agri_bio$agribio_part_2018)
agri_bio$agribio_part_2019 <- as.numeric(agri_bio$agribio_part_2019)
agri_bio$agribio_nbexp_2019 <- as.integer(agri_bio$agribio_nbexp_2019)
agri_bio$code_dept <- str_pad(agri_bio$code_dept, 2, pad = "0")
agri_bio <-  agri_bio %>%
mutate(agribio_part_2019  = ifelse( agribio_part_2019 > 50, agribio_part_2019/100, agribio_part_2019))
france <- st_read("france.shp")
france <- clean_names(france)
agri_bio_map <- france %>%
left_join(agri_bio, by = "code_dept")
seuilexp <- 1000
seuilpart <- 20
agri_bio_map <- agri_bio_map %>%
mutate(plusdemille = ifelse(agribio_nbexp_2019 > seuilexp, 1, 0)) %>%
mutate(plusdemille = as.factor(plusdemille)) %>%
mutate(plusdevingt = ifelse(agribio_part_2019 > seuilpart, nom_dept, ""))
esquisse::esquisser()
esquisse::esquisser()
agri_bio <- read_excel("agri_bio.xlsx")
agri_bio <- clean_names(agri_bio)
agri_bio$agribio_part_2018 <- as.numeric(agri_bio$agribio_part_2018)
agri_bio$agribio_part_2019 <- as.numeric(agri_bio$agribio_part_2019)
agri_bio$agribio_nbexp_2019 <- as.integer(agri_bio$agribio_nbexp_2019)
agri_bio$code_dept <- str_pad(agri_bio$code_dept, 2, pad = "0")
agri_bio <-  agri_bio %>%
mutate(agribio_part_2019  = ifelse( agribio_part_2019 > 50, agribio_part_2019/100, agribio_part_2019))
seuilexp <- 1000
seuilpart <- 20
agri_bio <- agri_bio %>%
mutate(plusdemille = ifelse(agribio_nbexp_2019 > seuilexp, 1, 0)) %>%
mutate(plusdemille = as.factor(plusdemille)) %>%
mutate(plusdevingt = ifelse(agribio_part_2019 > seuilpart, nom_dept, ""))
View(agri_bio)
agri_bio <- agri_bio %>%
mutate(plusdemille = ifelse(agribio_nbexp_2019 > seuilexp, 1, 0)) %>%
mutate(plusdemille = as.factor(plusdemille)) %>%
mutate(plusdevingt = ifelse(agribio_part_2019 > seuilpart, code_dept, ""))
esquisse::esquisser(data = agri_bio)
library(tidyverse)
library(ggforce)
library(sf)
library(haven)
library(FactoMineR)
library(ggrepel)
library(readxl)
library(stargazer)
# setwd("C:/Users/quent/Desktop/ENS Paris-Saclay/1A/1S2/Econométrie/TDs/Bases de données/Documents")
setwd("~/Documents/ENS/econometrie/projet_r")
EVS <- read_dta("ZA7500_v4-0-0.dta")
EVS <- read_dta("ZA7500_v4-0-0.dta")
dep <-read_xlsx("depenses-env.xlsx")
dep <-read_xlsx("depenses-env.xlsx")
db <-EVS %>%
select(caseno, year, country, c_abrv, v7, v199, v200, v201, v202, v203, v204) %>%
mutate(happy = as.numeric(case_when(v7 %in% c("1", "2") ~ "1",
v7 %in% c("3", "4") ~ "0",
v7 %in% c("8", "9") ~ "NA")),
env1 = as.numeric(case_when(v199 %in% c("1","2") ~ "1",
v199 %in% c("3", "4", "5") ~ "0",
v199 %in% c("8", "9") ~ "NA")),
env2 = as.numeric(case_when(v200 %in% c("1","2") ~ "1",
v200 %in% c("3", "4", "5") ~"0",
v200 %in% c("8", "9") ~ "NA")),
env3 = as.numeric(case_when(v201 %in% c("1","2") ~ "1",
v201 %in% c("3", "4", "5") ~"0",
v201 %in% c("8", "9") ~ "NA")),
env4 = as.numeric(case_when(v202 %in% c("1","2") ~ "1",
v202 %in% c("3", "4", "5") ~"0",
v202 %in% c("8", "9") ~ "NA")),
env5 = as.numeric(case_when(v203 %in% c("1","2") ~ "1",
v203 %in% c("3", "4", "5") ~"0",
v203 %in% c("8", "9") ~ "NA")),
env6 = as.numeric(case_when(v204 %in% c("1") ~ "1",
v204 %in% c("2") ~"0",
v204 %in% c("8", "9") ~ "NA")))%>%
group_by(country, c_abrv) %>%
summarize(
#effectif = n_distinct(caseno),
happy = mean(happy == 1, na.rm = T),
env1 = mean(env1 == 1, na.rm = T),
env2 = mean(env2 == 1, na.rm = T),
env3 = mean(env3 == 1, na.rm = T),
env4 = mean(env4 == 1, na.rm = T),
env5 = mean(env5 == 1, na.rm = T),
env6 = mean(env6 == 1, na.rm = T))
EVS <- read_dta("ZA7500_v4-0-0.dta")
dep <-read_xlsx("depenses-env.xlsx")
db <-EVS %>%
select(caseno, year, country, c_abrv, v7, v199, v200, v201, v202, v203, v204) %>%
mutate(happy = as.numeric(case_when(v7 %in% c("1", "2") ~ "1",
v7 %in% c("3", "4") ~ "0",
v7 %in% c("8", "9") ~ "NA")),
env1 = as.numeric(case_when(v199 %in% c("1","2") ~ "1",
v199 %in% c("3", "4", "5") ~ "0",
v199 %in% c("8", "9") ~ "NA")),
env2 = as.numeric(case_when(v200 %in% c("1","2") ~ "1",
v200 %in% c("3", "4", "5") ~"0",
v200 %in% c("8", "9") ~ "NA")),
env3 = as.numeric(case_when(v201 %in% c("1","2") ~ "1",
v201 %in% c("3", "4", "5") ~"0",
v201 %in% c("8", "9") ~ "NA")),
env4 = as.numeric(case_when(v202 %in% c("1","2") ~ "1",
v202 %in% c("3", "4", "5") ~"0",
v202 %in% c("8", "9") ~ "NA")),
env5 = as.numeric(case_when(v203 %in% c("1","2") ~ "1",
v203 %in% c("3", "4", "5") ~"0",
v203 %in% c("8", "9") ~ "NA")),
env6 = as.numeric(case_when(v204 %in% c("1") ~ "1",
v204 %in% c("2") ~"0",
v204 %in% c("8", "9") ~ "NA")))%>%
group_by(country, c_abrv) %>%
summarize(
#effectif = n_distinct(caseno),
happy = mean(happy == 1, na.rm = T),
env1 = mean(env1 == 1, na.rm = T),
env2 = mean(env2 == 1, na.rm = T),
env3 = mean(env3 == 1, na.rm = T),
env4 = mean(env4 == 1, na.rm = T),
env5 = mean(env5 == 1, na.rm = T),
env6 = mean(env6 == 1, na.rm = T))
db$Pays <- db$c_abrv
db$Pays <- db$c_abrv
base_simple <- db %>%
full_join(dep, by = "Pays")
base_simple_propre <- base_simple %>%
filter(Pays != "NA", happy != "NA")
base_simple_propre <- base_simple_propre %>%
select(c_abrv, happy, env1, env2, env3, env4, env5, env6, MOI_EUR_2016, PC_GDP_2016)
reg1 <- lm(data = base_simple_propre, formula = PC_GDP_2016 ~ env1) # je sais pas quoi faire avec ça, mais à approfondir
reg2 <- lm(data = base_simple_propre, formula = PC_GDP_2016 ~ env6) # je sais pas quoi faire avec ça, mais à approfondir
ggplot(data = base_simple_propre, mapping = aes(x = env5, y = PC_GDP_2016)) +
theme_bw() +
geom_jitter()+
geom_smooth(method = lm) + # j'viens de découvrir : pour une droite linéaire, faut mettre method = lm, sinon, loess est pas mal
labs(x = "Sensibilité moyenne à l'écologie (env1)", y = "Dépenses environnementales en part de PIB") +
theme(legend.position = "bottom") +
scale_color_manual(name = "Les dépenses pour l'environnement sont-elles sensibles à l'opinion publique ?", values =
c("black","gray"))+
guides(color = guide_legend(ncol=2, direction = "horizontal"))
stargazer(reg1, reg2, header = FALSE, type = 'html', notes.label = "Comments", notes = "Pas très significatif toussa, à creuser")
stargazer(reg1, reg2, header = FALSE, type = 'html', notes.label = "Comments", notes = "Pas très significatif toussa, à creuser")
stargazer(base_simple_propre, header = FALSE, type = "html")
europe <- st_read("Europe/europe.shp")
dbind<- dbind %>%
ungroup() %>%
mutate(groupe = resultat_classif$data.clust$clust)
esultat_ACP <- PCA(db[, 3:9])
dbact<-as_tibble(resultat_ACP$var$coord) %>%
mutate(names=c(rownames(resultat_ACP$var$coord)))
resultat_ACP <- PCA(db[, 3:9])
dbact<-as_tibble(resultat_ACP$var$coord) %>%
mutate(names=c(rownames(resultat_ACP$var$coord)))
dbind<-bind_cols(db,as_tibble(resultat_ACP$ind$coord))
resultat_classif <- HCPC(resultat_ACP, nb.clust = 4, graph = FALSE)
dbind<- dbind %>%
ungroup() %>%
mutate(groupe = resultat_classif$data.clust$clust)
europe <- st_read("Europe/europe.shp")
codes <- read.csv("all.csv") %>%
filter(region == "Europe")%>%
select(name, alpha.2) %>%
mutate (NAME = name,
c_abrv = alpha.2)
carte_europe <- europe %>%
full_join(codes, by = "NAME")
carte_europe <- carte_europe %>%
full_join(dbind, by = "c_abrv")
test <-  as.data.frame(carte_europe) %>%
select(-geometry)
barplot(resultat_ACP$eig[,2],main="Figure I - Part expliquée par chaque axe dans la variance totale",
names.arg=1:nrow(resultat_ACP$eig),col= rainbow (15))
ggplot(dbact,aes(x=Dim.1,y= Dim.2,label=names))+
geom_point()+
theme(legend.title=element_blank(),
panel.background =element_rect(fill="white")) +
geom_text(size=4,show.legend = FALSE)+
geom_hline(yintercept=0,linetype="dashed",colour="grey")+
geom_vline(xintercept = 0,linetype="dashed",colour="grey")+
ggtitle("Espace des variables de l'ACP avec les axes 1 et 3") +
xlab(paste("Axe 1 :",round(resultat_ACP$eig[1,2],0),"%"))+
ylab(paste("Axe 2 :",round(resultat_ACP$eig[2,2],0),"%")) +
geom_circle( aes(x0 = 0, y0 = 0, r = 1), inherit.aes = F) +
scale_x_continuous(limits = c(-1, 1)) +
scale_y_continuous(limits = c(-1, 1)) +
coord_fixed() +
geom_segment(aes(x = 0, y = 0, xend = Dim.1, yend = Dim.2), arrow = arrow())
ggplot(dbact,aes(x=Dim.1,y= Dim.2,label=names))+
geom_point()+
theme(legend.title=element_blank(),
panel.background =element_rect(fill="white")) +
geom_text(size=4,show.legend = FALSE)+
geom_hline(yintercept=0,linetype="dashed",colour="grey")+
geom_vline(xintercept = 0,linetype="dashed",colour="grey")+
ggtitle("Espace des variables de l'ACP avec les axes 1 et 3") +
xlab(paste("Axe 1 :",round(resultat_ACP$eig[1,2],0),"%"))+
ylab(paste("Axe 2 :",round(resultat_ACP$eig[2,2],0),"%")) +
geom_circle( aes(x0 = 0, y0 = 0, r = 1), inherit.aes = F) +
scale_x_continuous(limits = c(-1, 1)) +
scale_y_continuous(limits = c(-1, 1)) +
coord_fixed() +
geom_segment(aes(x = 0, y = 0, xend = Dim.1, yend = Dim.2), arrow = arrow())
ggplot(data=dbind,aes(x=Dim.1,y=Dim.2))+
ggtitle("Titre")+
geom_point()+
geom_text_repel(aes(label = c_abrv),size=3)+
geom_hline(yintercept=0,linetype="dashed")+
geom_vline(xintercept = 0,linetype="dashed")+
theme(plot.title=element_text(hjust=0.5),legend.position=c(.95,.2),
panel.background =element_rect(fill="white"),legend.title=element_blank())+
xlab(paste("Axe 1 :",round(resultat_ACP$eig[1,2],0),"%"))+
ylab(paste("Axe 2 :",round(resultat_ACP$eig[2,2],0),"%"))
ggplot(data=dbind,aes(x=Dim.1,y=Dim.2))+
ggtitle("Titre")+
geom_point(aes(color=groupe))+
geom_text_repel(aes(color=groupe,label=c_abrv),
size=3, max.overlaps = 20, max.iter = 1000)+
geom_hline(yintercept=0,linetype="dashed")+
geom_vline(xintercept = 0,linetype="dashed")+
theme(plot.title=element_text(hjust=0.5),
panel.background =element_rect(fill="white"))+
xlab(paste("Axe 1 :",round(resultat_ACP$eig[1,2],0),"%"))+
ylab(paste("Axe 2 :",round(resultat_ACP$eig[2,2],0),"%"))+
guides(color = F)
ggplot(data=dbind,aes(x=Dim.1,y=Dim.2))+
ggtitle("Titre")+
geom_point(aes(color=groupe))+
geom_text_repel(aes(color=groupe,label=c_abrv),
size=3, max.overlaps = 20, max.iter = 1000)+
geom_hline(yintercept=0,linetype="dashed")+
geom_vline(xintercept = 0,linetype="dashed")+
theme(plot.title=element_text(hjust=0.5),
panel.background =element_rect(fill="white"))+
xlab(paste("Axe 1 :",round(resultat_ACP$eig[1,2],0),"%"))+
ylab(paste("Axe 2 :",round(resultat_ACP$eig[2,2],0),"%"))+
guides(color = F)
ggplot(data = carte_europe) +
geom_sf(aes(fill = groupe)) +
guides(fill = F) +
ggtitle("Figure VI - Carte des pays classifiés selon les opinions agrégées sur l'environnement") +
coord_sf(datum = NA)
summary(reg1)
residuals(reg1)
predict(reg1)
base_simple_propre
view(base_simple_propre)
reg3 <- lm(data = base_simple_propre, formula = PC_GDP_2016 ~ env1 + env6 + happy + MOI_EUR_2016)
summary(reg3)
residuals(reg1)
predict(reg1)
summary(reg3)
reg3 <- lm(data = base_simple_propre, formula = PC_GDP_2016 ~ env1 + env6 + happy + MOI_EUR_2016)
# comparaison de modèles :
anova(reg1,reg3)
# comparaison de modèles :
anova(reg1,reg2)
anova(reg1)
reg4 <- lm(data = base_simple_propre, formula = PC_GDP_2016 ~ env1 + + env2 + env3 + env4 + env5 + env6 + happy + MOI_EUR_2016)
summary(reg4)
residuals(reg1)
ggplot(data = base_simple_propre, mapping = aes(x = env5, y = PC_GDP_2016)) +
theme_bw() +
geom_jitter()+
geom_smooth(method = lm) + # j'viens de découvrir : pour une droite linéaire, faut mettre method = lm, sinon, loess est pas mal
labs(x = "Sensibilité moyenne à l'écologie (env1)", y = "Dépenses environnementales en part de PIB") +
theme(legend.position = "bottom") +
scale_color_manual(name = "Les dépenses pour l'environnement sont-elles sensibles à l'opinion publique ?", values =
c("black","gray"))+
guides(color = guide_legend(ncol=2, direction = "horizontal"))
