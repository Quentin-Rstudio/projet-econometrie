## Données -----
setwd("C:/Users/quent/Desktop/ENS Paris-Saclay/1A/1S2/Econométrie/TDs/Bases de données/Documents/projet-econometrie")
# setwd("~/Documents/ENS/econometrie/projet_r")
base_complete <- read_csv("base_complete.csv") %>%
mutate(code2 = as.character(code2))
kable(resultat_ACP$eig, caption = "Tableau des valeurs propres et \nvariances des composantes principales")
resultat_ACP     <- PCA(base_complete[, 5:14], graph= F)
kable(resultat_ACP$eig, caption = "Tableau des valeurs propres et \nvariances des composantes principales")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
options(encoding = "UTF-8")
## Packages ----
library(tidyverse)
library(ggforce)
library(sf)
library(haven)
library(FactoMineR)
library(ggrepel)
library(stargazer)
library(questionr)
#install.packages("remotes")
#remotes::install_github("easystats/easystats")
#install.packages("qqplotr")
library(qqplotr)
library("easystats")
#install.packages("ggraph")
library(ggraph)
library(dplyr)
library(see)
## Données -----
# setwd("C:/Users/quent/Desktop/ENS Paris-Saclay/1A/1S2/Econométrie/TDs/Bases de données/Documents/projet-econometrie")
# setwd("~/Documents/ENS/econometrie/projet_r")
base_complete <- read_csv("base_complete.csv") %>%
mutate(code2 = as.character(code2))
compare_models(reg1, reg1bis, reg1ter, reg1quater)
reg1    <- lm(data = base_complete, formula = part_depenses_env ~ sensi_env)
reg1bis <- lm(data=base_complete, formula = part_depenses_env ~ conn_env + perc_env + soutien_pol_env)
reg1ter <- lm(data = base_complete, formula = depenses_brutes_env ~ sensi_env)
reg1quater <- lm(data = base_complete, formula = depenses_brutes_env ~ conn_env + perc_env + soutien_pol_env)
compare_models(reg1, reg1bis, reg1ter, reg1quater)
compare_parameters(reg1, reg1bis, reg1ter, reg1quater)
compare_models(reg1, reg1bis, reg1ter, reg1quater)
compare_models(reg1, reg1bis, reg1ter, reg1quater)
stargazer(reg1, reg1bis, reg1ter, reg1quater)
reg1bis <- lm(data=base_complete, formula = part_depenses_env ~ conn_env + perc_env + soutien_pol_env)
summary.aov(reg1bis) #table des variances (test d'analyse sur la variance)
check_heteroscedasticity(reg1bis) # problème d'hétéroscédasticité -> on ne peut plus appliquer les tests statistiques post-estimation (matrice des variances - covariances est biaisée)
plot(resid_reg1bis)
resid_reg1bis <- resid(reg1bis)
plot(resid_reg1bis)
plot(compare_performance(reg1,reg1bis,reg5), rank = TRUE) #comparaison graphique des différents modèles
compare_performance(reg1, reg1bis)
plot(compare_performance(reg1,reg1bis,reg5), rank = TRUE) #comparaison graphique des différents modèles
check_model(reg1bis) #Visual check of model various assumptions (normality of residuals, normality of random effects, linear relationship, homogeneity of variance, multicollinearity).
?check_model
plot(compare_performance(reg1,reg1bis,reg5), rank = TRUE) #comparaison graphique des différents modèles
compare_performance(reg1, reg1bis)
reg5 <- lm(data = base_complete, formula = part_depenses_env ~ conn_env + soutien_pol_env + GINI_2017 + EPI.new)
plot(compare_performance(reg1,reg1bis,reg5), rank = TRUE) #comparaison graphique des différents modèles
check_heteroscedasticity(reg1bis) # problème d'hétéroscédasticité -> on ne peut plus appliquer les tests statistiques post-estimation (matrice des variances - covariances est biaisée)
plot(reg1bis) #a peu pres comme check model mais en moche -> choisir entre les deux
summary.aov(reg1bis) #table des variances (test d'analyse sur la variance)
model_performance(reg1bis)
compare_performance(reg1, reg1bis)
model_performance(reg1bis)
plot(compare_performance(reg1,reg1bis,reg5), rank = TRUE) #comparaison graphique des différents modèles
test_performance(reg1,reg1bis)
stargazer(reg3, reg3bis, reg4, reg4bis, title = "Modèles simples sans variables de contrôle.", header = F, column.labels =  c("reg1", "reg1bis", "reg1ter", "reg1quater"))
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
options(encoding = "UTF-8")
## Packages ----
library(tidyverse)
library(ggforce)
library(sf)
library(haven)
library(FactoMineR)
library(ggrepel)
library(stargazer)
library(questionr)
#install.packages("remotes")
#remotes::install_github("easystats/easystats")
#install.packages("qqplotr")
library(qqplotr)
library("easystats")
#install.packages("ggraph")
library(ggraph)
library(dplyr)
library(see)
## Données -----
# setwd("C:/Users/quent/Desktop/ENS Paris-Saclay/1A/1S2/Econométrie/TDs/Bases de données/Documents/projet-econometrie")
# setwd("~/Documents/ENS/econometrie/projet_r")
base_complete <- read_csv("base_complete.csv") %>%
mutate(code2 = as.character(code2))
# compare_performance(reg1, reg1bis)
#
# plot(compare_performance(reg1,reg1bis,reg5), rank = TRUE) #comparaison graphique des différents modèles
#
# # test_performance(reg1,reg1bis)    # pas compris ce que c'était.
#
# reg3               <- lm(data = base_complete, formula = part_depenses_env ~ sensi_env + EPI.new + REV_MED_EURO_2017 + EDUC_SUP_2017 + GINI_2017)
#
# summary(reg3) # R2 adj : 0,06
#
reg4 <- lm(data = base_complete, formula = depenses_brutes_env ~ sensi_env + EPI.new + REV_MED_EURO_2017 + EDUC_SUP_2017 + GINI_2017)
#
summary(reg4) # R2 adj : 0,28
#
reg5 <- lm(data = base_complete, formula = part_depenses_env ~ conn_env + soutien_pol_env + GINI_2017 + EPI.new)
#
summary(reg5) # R2 ajd : 0,25
# #
#  reg5 <- lm(data = base_complete, formula = part_depenses_env ~ conn_env + soutien_pol_env + GINI_2017 + EPI.new)
# #
#  summary(reg5) # R2 ajd : 0,25
# #
reg5bis <- lm(data = base_complete, formula = depenses_brutes_env ~ conn_env + soutien_pol_env + GINI_2017 + EPI.new)
summary(reg5bis)
# check_model(reg5)
#
reg6 <- lm(data = base_complete, formula = part_depenses_env ~ conn_env + soutien_pol_env + GINI_2017 +  EDUC_SUP_2017 + EPI.new)
#
summary(reg6) #R 2 adj : 0,23
#
reg6bis <- lm(data = base_complete, formula = depenses_brutes_env ~ conn_env + soutien_pol_env + GINI_2017 +  EDUC_SUP_2017 + EPI.new)
summary(reg6bis)
# #
reg5 <- lm(data = base_complete, formula = part_depenses_env ~ conn_env + soutien_pol_env + GINI_2017 + EPI.new)
# #
summary(reg5) # R2 ajd : 0,25
#
# model_performance(reg5)
# print(test_performance(reg1,reg5))
#
reg7             <- lm(data = base_complete, formula = part_depenses_env ~ conn_env + perc_env + soutien_pol_env + EPI.new + REV_MED_EURO_2017 + EDUC_SUP_2017 + GINI_2017)
#
summary(reg7) # R2 adj : 0,11
compare_models(reg2,reg7, reg7bis, reg5bis)
reg2    <- lm(data = base_complete, formula = part_depenses_env ~ conn_env)
reg2bis <- lm(data=base_complete, formula = depenses_brutes_env ~ conn_env)
reg3   <- lm(data = base_complete, formula = part_depenses_env ~ sensi_env + EPI.new + REV_MED_EURO_2017 + EDUC_SUP_2017 + GINI_2017)
reg3bis <- lm(data=base_complete, formula = depenses_brutes_env ~ sensi_env + EPI.new + REV_MED_EURO_2017 + EDUC_SUP_2017 + GINI_2017)
reg4   <- lm(data = base_complete, formula = part_depenses_env ~ conn_env + EPI.new + REV_MED_EURO_2017 + EDUC_SUP_2017 + GINI_2017)
reg4bis <- lm(data=base_complete, formula = depenses_brutes_env ~ conn_env + EPI.new + REV_MED_EURO_2017 + EDUC_SUP_2017 + GINI_2017)
reg5   <- lm(data = base_complete, formula = part_depenses_env ~ sensi_env + EPI.new + EDUC_SUP_2017 + GINI_2017)
reg5bis <- lm(data=base_complete, formula = depenses_brutes_env ~ sensi_env + EPI.new +  EDUC_SUP_2017)
reg6   <- lm(data = base_complete, formula = part_depenses_env ~ conn_env + EPI.new + EDUC_SUP_2017 + GINI_2017)
reg6bis <- lm(data=base_complete, formula = depenses_brutes_env ~ conn_env + EPI.new + EDUC_SUP_2017 + GINI_2017)
reg7   <- lm(data = base_complete, formula = part_depenses_env ~ conn_env + soutien_pol_env + EPI.new + GINI_2017)
reg7bis <- lm(data=base_complete, formula = part_depenses_env ~ conn_env + soutien_pol_env + EPI.new + EDUC_SUP_2017 + GINI_2017)
compare_models(reg2,reg7, reg7bis, reg5bis)
plot(compare_models(reg2,reg7, reg7bis, reg5bis), rank = T)
plot(compare_models(reg2,reg7, reg7bis, reg5bis), rank = TRUE)
plot(compare_performance(reg2,reg7, reg7bis, reg5bis), rank = TRUE)
?check_model()
check_model(reg2, panel = T, )
check_model(reg7, panel = T)
check_model(reg5bis, panel = T)
check_model(reg5bis, panel = T)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
options(encoding = "UTF-8")
## Packages ----
library(tidyverse)
library(ggforce)
library(sf)
library(haven)
library(FactoMineR)
library(ggrepel)
library(stargazer)
library(questionr)
#install.packages("remotes")
#remotes::install_github("easystats/easystats")
#install.packages("qqplotr")
library(qqplotr)
library("easystats")
#install.packages("ggraph")
library(ggraph)
library(dplyr)
library(see)
## Données -----
# setwd("C:/Users/quent/Desktop/ENS Paris-Saclay/1A/1S2/Econométrie/TDs/Bases de données/Documents/projet-econometrie")
# setwd("~/Documents/ENS/econometrie/projet_r")
base_complete <- read_csv("base_complete.csv") %>%
mutate(code2 = as.character(code2))
reg2    <- lm(data = base_complete, formula = part_depenses_env ~ conn_env)
reg5bis <- lm(data=base_complete, formula = depenses_brutes_env ~ sensi_env + EPI.new +  EDUC_SUP_2017)
reg7   <- lm(data = base_complete, formula = part_depenses_env ~ conn_env + soutien_pol_env + EPI.new + GINI_2017)
check_heteroscedasticity(reg2)
check_heteroscedasticity(reg5bis)
check_heteroscedasticity(reg7)
"For reg2",check_heteroscedasticity(reg2)
print("For reg2",check_heteroscedasticity(reg2))
check_heteroscedasticity(reg2)
print(check_heteroscedasticity(reg2))
cat(check_heteroscedasticity(reg2))
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
knitr::opts_chunk$set(out.height = '300pt', fig.align = 'center')
## Packages ----
library(tidyverse)
library(ggforce)
library(sf)
library(haven)
library(FactoMineR)
library(ggrepel)
library('kableExtra')
library(knitr)
library(stargazer)
library(questionr)
#install.packages("remotes")
#remotes::install_github("easystats/easystats")
#install.packages("qqplotr")
library(qqplotr)
library("easystats")
#install.packages("ggraph")
library(ggraph)
library(dplyr)
library(see)
# install.packages("ggcorrplot")                      # Install corrplot package
library(ggcorrplot)
## Données -----
setwd("C:/Users/quent/Desktop/ENS Paris-Saclay/1A/1S2/Econométrie/TDs/Bases de données/Documents/projet-econometrie")
# setwd("~/Documents/ENS/econometrie/projet_r")
base_complete <- read_csv("base_complete.csv") %>%
mutate(code2 = as.character(code2))
europe             <- st_read("Europe/europe.shp", quiet = T)
codes              <- read.csv("all.csv") %>%
filter(region == "Europe")%>%
select(name, alpha.2) %>%
mutate (NAME = name,
c_abrv = alpha.2)
europe             <- st_read("Europe/europe.shp", quiet = T)
codes              <- read.csv("all.csv") %>%
filter(region == "Europe")%>%
select(name, alpha.2) %>%
mutate (NAME = name,
c_abrv = alpha.2)
carte_europe       <- europe %>%
full_join(codes, by = "NAME")
carte_europe       <- carte_europe %>%
full_join(base_complete, by = c("c_abrv"= "Pays"))
ggplot(data = carte_europe) +
geom_sf(aes(fill = sensi_env)) +
ggtitle("Figure VI - Sensibilité environnementale en Europe") +
coord_sf(datum = NA) +
scale_fill_gradientn(colours = c("white", "darkolivegreen1", "yellowgreen","forestgreen", "darkgreen"))
ggplot(data = carte_europe) +
geom_sf(aes(fill = sensi_env)) +
ggtitle("Figure VI - Sensibilité environnementale en Europe") +
coord_sf(datum = NA) +
scale_fill_gradientn(colours = c("white", "darkolivegreen1", "yellowgreen","forestgreen", "darkgreen"))
library(tidyverse)
library(readxl)
setwd("C:/Users/quent/Desktop/ENS Paris-Saclay/1A/1S2/Econométrie/TDs/Bases de données/Documents/projet-econometrie")
EVS <- read_dta("ZA7500_v4-0-0.dta")
depenses <-read_xlsx("depenses-env.xlsx")
names(EVS_env)[names(EVS_env)=="c_abrv"] <- "Pays"
names(EVS_env)[names(EVS_env)=="country"] <- "code"
eai_data <- read_excel("EAI-data.xlsx") %>%
filter(EAI != "NA")
code_pays <- read_csv("all.csv")
gini <- read_excel("GINI_2017.xlsx") %>%
filter(EDUC_SUP_2017 != 'NA')
EVS_env <-EVS %>%
select(caseno, year, country, c_abrv, v7, v199, v200, v201, v202, v203, v204) %>%
mutate(env1 = as.numeric(case_when(v199 %in% c("4","5") ~ "0",
v199 %in% c("1", "2", "3") ~ "1",
v199 %in% c("8", "9") ~ "NA")),
env2 = as.numeric(case_when(v200 %in% c("1","2") ~ "0",
v200 %in% c("3", "4", "5") ~"1",
v200 %in% c("8", "9") ~ "NA")),
env3 = as.numeric(case_when(v201 %in% c("1","2") ~ "0",
v201 %in% c("3", "4", "5") ~"1",
v201 %in% c("8", "9") ~ "NA")),
env4 = as.numeric(case_when(v202 %in% c("1","2") ~ "0",
v202 %in% c("3", "4", "5") ~"1",
v202 %in% c("8", "9") ~ "NA")),
env5 = as.numeric(case_when(v203 %in% c("1","2") ~ "0",
v203 %in% c("3", "4", "5") ~"1",
v203 %in% c("8", "9") ~ "NA")),
env6 = as.numeric(case_when(v204 %in% c("1") ~ "1",
v204 %in% c("2") ~"0",
v204 %in% c("8", "9") ~ "NA")))%>%
group_by(country, c_abrv) %>%
summarize(
effectif = n_distinct(caseno),
perc_env = 100*mean(mean(env1 == 1, na.rm = T),
mean(env2 == 1, na.rm = T),
mean(env3 == 1, na.rm = T),
mean(env4 == 1, na.rm = T),
mean(env5 == 1, na.rm = T)),
soutien_pol_env = 100*mean(env6 == 1, na.rm = T))
EVS_et_depenses <- EVS_env %>%
full_join(depenses, by = "Pays")%>%
filter(Pays != "NA") %>%
select(Pays, perc_env, soutien_pol_env, MOI_EUR_2016, PC_GDP_2016)
env_et_depenses <- EVS_et_depenses %>%
full_join(eai_data, by = "code") %>%
full_join(code_pays, by = c("Pays" = "alpha-2")) %>%
filter(EAI != "NA", perc_env != "NA", PC_GDP_2016 != "NA") %>%
group_by(Pays) %>%
summarize(Nom_pays = first(name),
code2 = first(code),
code = first(`alpha-3`),
Pays = first(Pays),
sensi_env = (perc_env + soutien_pol_env + EAI)/3,
perc_env = first(perc_env),
soutien_pol_env = first(soutien_pol_env),
conn_env = first(EAI),
depenses_brutes_env = first(MOI_EUR_2016),
part_depenses_env = first(PC_GDP_2016))
epi2020results <- read.csv("epi2020results.csv") %>%
select(code, EPI.new)
gini_et_plus <- env_et_depenses %>%
left_join(gini, by = "code") %>%
select(-Country)
base_complete <- gini_et_plus %>%
left_join(epi2020results, by = c("code2" = "code")) %>%
mutate(code2 = as.character(code2)) %>%
select(Pays, code, code2, everything())
names(base_complete)[names(base_complete)=="REV_MED_EURO_2017"] <- "rev_median"
names(base_complete)[names(base_complete)=="GINI_2017"] <- "ind_gini"
names(base_complete)[names(base_complete)=="EDUC_SUP_2017"] <- "educ_sup"
names(base_complete)[names(base_complete)=="EPI.new"] <- "epi"
names(base_complete)[names(base_complete)=="depenses_brutes_env"] <- "depenses_env"
EVS_env <-EVS %>%
select(caseno, year, country, c_abrv, v7, v199, v200, v201, v202, v203, v204) %>%
mutate(env1 = as.numeric(case_when(v199 %in% c("4","5") ~ "0",
v199 %in% c("1", "2", "3") ~ "1",
v199 %in% c("8", "9") ~ "NA")),
env2 = as.numeric(case_when(v200 %in% c("1","2") ~ "0",
v200 %in% c("3", "4", "5") ~"1",
v200 %in% c("8", "9") ~ "NA")),
env3 = as.numeric(case_when(v201 %in% c("1","2") ~ "0",
v201 %in% c("3", "4", "5") ~"1",
v201 %in% c("8", "9") ~ "NA")),
env4 = as.numeric(case_when(v202 %in% c("1","2") ~ "0",
v202 %in% c("3", "4", "5") ~"1",
v202 %in% c("8", "9") ~ "NA")),
env5 = as.numeric(case_when(v203 %in% c("1","2") ~ "0",
v203 %in% c("3", "4", "5") ~"1",
v203 %in% c("8", "9") ~ "NA")),
env6 = as.numeric(case_when(v204 %in% c("1") ~ "1",
v204 %in% c("2") ~"0",
v204 %in% c("8", "9") ~ "NA")))%>%
group_by(country, c_abrv) %>%
summarize(
effectif = n_distinct(caseno),
perc_env = 100*mean(mean(env1 == 1, na.rm = T),
mean(env2 == 1, na.rm = T),
mean(env3 == 1, na.rm = T),
mean(env4 == 1, na.rm = T),
mean(env5 == 1, na.rm = T)),
soutien_pol_env = 100*mean(env6 == 1, na.rm = T))
EVS <- read_dta("ZA7500_v4-0-0.dta")
library(tidyverse)
library(readxl)
setwd("C:/Users/quent/Desktop/ENS Paris-Saclay/1A/1S2/Econométrie/TDs/Bases de données/Documents/projet-econometrie")
EVS <- read_dta("ZA7500_v4-0-0.dta")
?read_dta
library(haven)
setwd("C:/Users/quent/Desktop/ENS Paris-Saclay/1A/1S2/Econométrie/TDs/Bases de données/Documents/projet-econometrie")
EVS <- ?read_dta("ZA7500_v4-0-0.dta")
EVS <- read_dta("ZA7500_v4-0-0.dta")
depenses <-read_xlsx("depenses-env.xlsx")
EVS_env <-EVS %>%
select(caseno, year, country, c_abrv, v7, v199, v200, v201, v202, v203, v204) %>%
mutate(env1 = as.numeric(case_when(v199 %in% c("4","5") ~ "0",
v199 %in% c("1", "2", "3") ~ "1",
v199 %in% c("8", "9") ~ "NA")),
env2 = as.numeric(case_when(v200 %in% c("1","2") ~ "0",
v200 %in% c("3", "4", "5") ~"1",
v200 %in% c("8", "9") ~ "NA")),
env3 = as.numeric(case_when(v201 %in% c("1","2") ~ "0",
v201 %in% c("3", "4", "5") ~"1",
v201 %in% c("8", "9") ~ "NA")),
env4 = as.numeric(case_when(v202 %in% c("1","2") ~ "0",
v202 %in% c("3", "4", "5") ~"1",
v202 %in% c("8", "9") ~ "NA")),
env5 = as.numeric(case_when(v203 %in% c("1","2") ~ "0",
v203 %in% c("3", "4", "5") ~"1",
v203 %in% c("8", "9") ~ "NA")),
env6 = as.numeric(case_when(v204 %in% c("1") ~ "1",
v204 %in% c("2") ~"0",
v204 %in% c("8", "9") ~ "NA")))%>%
group_by(country, c_abrv) %>%
summarize(
effectif = n_distinct(caseno),
perc_env = 100*mean(mean(env1 == 1, na.rm = T),
mean(env2 == 1, na.rm = T),
mean(env3 == 1, na.rm = T),
mean(env4 == 1, na.rm = T),
mean(env5 == 1, na.rm = T)),
soutien_pol_env = 100*mean(env6 == 1, na.rm = T))
names(EVS_env)[names(EVS_env)=="c_abrv"] <- "Pays"
names(EVS_env)[names(EVS_env)=="country"] <- "code"
EVS_et_depenses <- EVS_env %>%
full_join(depenses, by = "Pays")%>%
filter(Pays != "NA") %>%
select(Pays, perc_env, soutien_pol_env, MOI_EUR_2016, PC_GDP_2016)
eai_data <- read_excel("EAI-data.xlsx") %>%
filter(EAI != "NA")
code_pays <- read_csv("all.csv")
env_et_depenses <- EVS_et_depenses %>%
full_join(eai_data, by = "code") %>%
full_join(code_pays, by = c("Pays" = "alpha-2")) %>%
filter(EAI != "NA", perc_env != "NA", PC_GDP_2016 != "NA") %>%
group_by(Pays) %>%
summarize(Nom_pays = first(name),
code2 = first(code),
code = first(`alpha-3`),
Pays = first(Pays),
sensi_env = (perc_env + soutien_pol_env + EAI)/3,
perc_env = first(perc_env),
soutien_pol_env = first(soutien_pol_env),
conn_env = first(EAI),
depenses_brutes_env = first(MOI_EUR_2016),
part_depenses_env = first(PC_GDP_2016))
gini <- read_excel("GINI_2017.xlsx") %>%
filter(EDUC_SUP_2017 != 'NA')
epi2020results <- read.csv("epi2020results.csv") %>%
select(code, EPI.new)
gini_et_plus <- env_et_depenses %>%
left_join(gini, by = "code") %>%
select(-Country)
base_complete <- gini_et_plus %>%
left_join(epi2020results, by = c("code2" = "code")) %>%
mutate(code2 = as.character(code2)) %>%
select(Pays, code, code2, everything())
names(base_complete)[names(base_complete)=="REV_MED_EURO_2017"] <- "rev_median"
names(base_complete)[names(base_complete)=="GINI_2017"] <- "ind_gini"
names(base_complete)[names(base_complete)=="EDUC_SUP_2017"] <- "educ_sup"
names(base_complete)[names(base_complete)=="EPI.new"] <- "epi"
names(base_complete)[names(base_complete)=="depenses_brutes_env"] <- "depenses_env"
View(base_complete)
write_csv(base_complete, "base_complete.csv")
library(tidyverse)
library(readxl)
library(haven)
setwd("C:/Users/quent/Desktop/ENS Paris-Saclay/1A/1S2/Econométrie/TDs/Bases de données/Documents/projet-econometrie")
# setwd("~/Documents/ENS/econometrie/projet_r")
EVS <- read_dta("ZA7500_v4-0-0.dta")
depenses <-read_xlsx("depenses-env.xlsx")
EVS_env <-EVS %>%
select(caseno, year, country, c_abrv, v7, v199, v200, v201, v202, v203, v204) %>%
mutate(env1 = as.numeric(case_when(v199 %in% c("4","5") ~ "0",
v199 %in% c("1", "2", "3") ~ "1",
v199 %in% c("8", "9") ~ "NA")),
env2 = as.numeric(case_when(v200 %in% c("1","2") ~ "0",
v200 %in% c("3", "4", "5") ~"1",
v200 %in% c("8", "9") ~ "NA")),
env3 = as.numeric(case_when(v201 %in% c("1","2") ~ "0",
v201 %in% c("3", "4", "5") ~"1",
v201 %in% c("8", "9") ~ "NA")),
env4 = as.numeric(case_when(v202 %in% c("1","2") ~ "0",
v202 %in% c("3", "4", "5") ~"1",
v202 %in% c("8", "9") ~ "NA")),
env5 = as.numeric(case_when(v203 %in% c("1","2") ~ "0",
v203 %in% c("3", "4", "5") ~"1",
v203 %in% c("8", "9") ~ "NA")),
env6 = as.numeric(case_when(v204 %in% c("1") ~ "1",
v204 %in% c("2") ~"0",
v204 %in% c("8", "9") ~ "NA")))%>%
group_by(country, c_abrv) %>%
summarize(
effectif = n_distinct(caseno),
perc_env = 100*mean(mean(env1 == 1, na.rm = T),
mean(env2 == 1, na.rm = T),
mean(env3 == 1, na.rm = T),
mean(env4 == 1, na.rm = T),
mean(env5 == 1, na.rm = T)),
soutien_pol_env = 100*mean(env6 == 1, na.rm = T))
names(EVS_env)[names(EVS_env)=="c_abrv"] <- "Pays"
names(EVS_env)[names(EVS_env)=="country"] <- "code"
EVS_et_depenses <- EVS_env %>%
full_join(depenses, by = "Pays")%>%
filter(Pays != "NA") %>%
select(Pays, perc_env, soutien_pol_env, MOI_EUR_2016, PC_GDP_2016)
eai_data <- read_excel("EAI-data.xlsx") %>%
filter(EAI != "NA")
code_pays <- read_csv("all.csv")
env_et_depenses <- EVS_et_depenses %>%
full_join(eai_data, by = "code") %>%
full_join(code_pays, by = c("Pays" = "alpha-2")) %>%
filter(EAI != "NA", perc_env != "NA", PC_GDP_2016 != "NA") %>%
group_by(Pays) %>%
summarize(Nom_pays = first(name),
code2 = first(code),
code = first(`alpha-3`),
Pays = first(Pays),
sensi_env = (perc_env + soutien_pol_env + EAI)/3,
perc_env = first(perc_env),
soutien_pol_env = first(soutien_pol_env),
conn_env = first(EAI),
depenses_brutes_env = first(MOI_EUR_2016),
part_depenses_env = first(PC_GDP_2016))
gini <- read_excel("GINI_2017.xlsx") %>%
filter(EDUC_SUP_2017 != 'NA')
epi2020results <- read.csv("epi2020results.csv") %>%
select(code, EPI.new)
gini_et_plus <- env_et_depenses %>%
left_join(gini, by = "code") %>%
select(-Country)
base_complete <- gini_et_plus %>%
left_join(epi2020results, by = c("code2" = "code")) %>%
mutate(code2 = as.character(code2)) %>%
select(Pays, code, code2, everything())
names(base_complete)[names(base_complete)=="REV_MED_EURO_2017"] <- "rev_median"
names(base_complete)[names(base_complete)=="GINI_2017"] <- "ind_gini"
names(base_complete)[names(base_complete)=="EDUC_SUP_2017"] <- "educ_sup"
names(base_complete)[names(base_complete)=="EPI.new"] <- "epi"
names(base_complete)[names(base_complete)=="depenses_brutes_env"] <- "depenses_env"
write_csv(base_complete, "base_complete.csv")
library(lmtest)
stargazer(reg2,reg7, reg5bis, header = F, title = "Modèles retenus.", column.labels =  c("reg2", "reg7", "reg5bis"))
